{"version":3,"sources":["../src/ityped.js"],"names":["root","factory","define","amd","exports","module","init","ityped","global","el","props","cursor","document","createElement","classList","add","textContent","forEach","a","b","c","d","e","length","f","g","h","j","call","async","setProps","config","strings","typeSpeed","backSpeed","backDelay","startDelay","showCursor","loop","insertAdjacentElement","cursorChar","undefined","Promise","resolve","element","querySelector","then","propertys","words","len","loopingOnWords","word","index","arr","time","done","iterateWords","setTimeout","increment","span","reject","i","count","wordIndex","appendWord","charAt","innerHTML","wordsLengthArray","decrement","interateInsideDecrement","iteratedI","substring","lengthWords","onFinished"],"mappings":"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","file":"ityped.js","sourcesContent":["/**\n * @name ityped\n * @description Dead simple Animated Typing with no dependencies\n * @author Luis VinÃ­cius\n * @email luis@uilabs.me\n */;\n(function (root, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], factory);\n  } else if (typeof exports === \"object\") {\n    module.exports = {\n      init: factory.init\n    }\n  } else {\n    root.ityped = factory;\n  }\n}(this, function (global) {\n  /**\n   * el is the element\n   */\n  let el,\n    props,\n    /**\n   * creating the cursor\n   */\n    cursor = document.createElement('span');\n  cursor\n    .classList\n    .add('ityped-cursor');\n  cursor.textContent = '|';\n\n  /**\n   * async foreach\n   * https://www.npmjs.com/package/async-foreach\n   */\n  function forEach(a, b, c) {\n    var d = -1,\n      e = a.length >>> 0;\n    (function f(g) {\n      var h,\n        j = g === !1;\n      do\n        ++d;\n      while (!(d in a) && d !== e);\n      if (j || d === e) {\n        c && c(!j, a);\n        return\n      }\n      g = b.call({\n        async: function () {\n          return h = !0,\n          f\n        }\n      }, a[d], d, a),\n      h || f(g)\n    })()\n  }\n\n  /**\n   * @name setProps\n   * @description Set the ityped propertys configuration\n   * @param {Object} config The configuration propertys\n   * @return {Promise}\n   */\n  function setProps ( config ) {\n    let props = config;\n    props.strings    = config.strings    || ['Put you string here...', 'and Enjoy!']\n    props.typeSpeed  = config.typeSpeed  || 100;\n    props.backSpeed  = config.backSpeed  || 50;\n    props.backDelay  = config.backDelay  || 500;\n    props.startDelay = config.startDelay || 500;\n    props.showCursor = config.showCursor || true;\n    props.loop       = config.loop       || false;\n    if (props.showCursor) el.insertAdjacentElement('afterend', cursor)\n    if (props.cursorChar !== undefined) cursor.textContent = props.cursorChar\n\n    return Promise.resolve(props);\n  }\n  /**\n   * @name init\n   * @param {String} el The element that will receive the strings\n   * @param {Object} confing The initial configuration\n   */\n  function init(element, config) {\n    el = document.querySelector(element);\n    setProps(config).then(function(propertys){\n      props = propertys;\n      let words = props.strings,\n      len = words.length;\n      loopingOnWords(words);\n    })\n  }\n\n  /**\n   * @name loopingOnWords\n   * @description Loop on each string passed\n   * @param {Array} words The array that contain the words\n   */\n  function loopingOnWords(words) {\n    forEach(words, function (word, index, arr) {\n      let time = (props.typeSpeed * word.length - 1)\n      /**\n       * set the correct time\n       * with the differences of type and back\n       * speed\n       */\n      if (props.backSpeed < props.typeSpeed) {\n        time -= (props.typeSpeed - props.backSpeed) * word.length;\n      } else if (props.typeSpeed - props.backSpeed) {\n        time += (props.backSpeed - props.typeSpeed) * word.length;\n      }\n      let done = this.async();\n      let len = words.length;\n      iterateWords(el, word, index, len).then(function () {\n        setTimeout(function () {\n          done();\n        }, time)\n      })\n    }, function () {\n      if (props.loop) {\n        loopingOnWords(words);\n      }\n    });\n  }\n  /**\n   * @name increment\n   * @description Increment each letter and append it on element\n   * @param {Element} span The Element that will receive the letters\n   * @param {String} word The string that will be looped to\n   * get each letter\n   * @return {Promise}\n   */\n  function increment(span, word) {\n    return new Promise(function (resolve, reject) {\n      for (let i = 0; i < word.length; i++) {\n        count = 0;\n        let wordIndex = i;\n        let len = word.length;\n        setTimeout(function (i) {\n          appendWord(span, word.charAt(wordIndex));\n          count++;\n          if (count === len - 1) {\n            resolve();\n          }\n        }, props.typeSpeed * i);\n      }\n    })\n  }\n  /**\n   * @name appendWord\n   * @description Append each letter on Element\n   * @param {Element} el The Element that will receive the letter\n   * @param {String} word The string that will be appended\n   */\n  function appendWord(el, word) {\n    el.innerHTML += word;\n  }\n\n  /**\n   * @name iterateWords\n   * @description Iterate on each word, incrementing and decrementing\n   * @param {Element} element The Element that will receive the letters of word\n   * @param {String} word The string that is the word\n   * @param {Integer} index The index position of the words Array\n   * @param {Integer} wordsLengthArray The length of words Array\n   * @return {Promise}\n   */\n  function iterateWords(element, word, index, wordsLengthArray) {\n    return new Promise(function (resolve, reject) {\n      increment(element, word)\n        .then(function () {\n          setTimeout(function () {\n            decrement(element, word, index, wordsLengthArray)\n              .then(function () {\n                setTimeout(function(){\n                  resolve();\n                }, props.startDelay)\n              });\n          }, props.backDelay)\n        });\n        // console.log(word, index, wordsLengthArray\n    })\n  }\n  /**\n   * @name interateInsideDecrement\n   * @description Iterate on each word, inside the decrement function for decrement the word\n   * @param {Element} span The Element that will receive the letters of word\n   * @param {String} word The string that is the word\n   * @param {Integer} len The length of words Array\n   * @param {Promise} resolve The Promise.resolve method that will be trigerred when\n   * the decrement iteration are finished\n   * @return {Promise}\n   */\n  function interateInsideDecrement(span, word, len, resolve) {\n    for (var i = len; i > 0; i--) {\n      let iteratedI = i;\n      let count = len;\n      setTimeout(function (i) {\n        span.innerHTML = word.substring(0, len - iteratedI)\n        count--;\n        if (iteratedI === 1) {\n          resolve();\n        }\n      }, props.backSpeed * i);\n    }\n  }\n\n  /**\n   * @name decrement\n   * @description decrement the word in the correct case\n   * @param {Element} span The Element that will receive the letters of word\n   * @param {String} word The string that is the word\n   * @param {Integer} index The index of the Array that contain the word\n   * @param {Integer} lengthWords The length of words Array\n   */\n  function decrement(span, word, index, lengthWords) {\n    return new Promise(function (resolve, reject) {\n      let len = word.length;\n      // if is the last letter and the last word and no loop\n      if (index + 1 === lengthWords) {\n        if (!props.loop) {\n        // when the last word\n          if (props.onFinished !== undefined && typeof props.onFinished === \"function\"){\n              props.onFinished();\n          }\n          span.innerHTML = word;\n        }\n        else if (props.loop) {\n          interateInsideDecrement(span, word, len, resolve);\n        }\n      } else if (index + 1 !== lengthWords) {\n        interateInsideDecrement(span, word, len, resolve);\n      }\n    })\n  }\n\n  /**\n   * Return the init function\n   */\n  return {init}\n}(this)));\n"]}